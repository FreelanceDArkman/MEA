var Users = function () {

    var initPickers = function () {
        //init date pickers
        $('.date-picker').datepicker({
            rtl: App.isRTL(),
            autoclose: true
        });
    }

    var handleOrders = function () {

        var grid = new Datatable();

        grid.init({
            src: $("#datatable_users"),
            onSuccess: function (grid) {
                // execute some code after table records loaded
            },
            onError: function (grid) {
                // execute some code on network or other general error
            },
            loadingMessage: 'Loading...',
            dataTable: { // here you can define a typical datatable settings from http://datatables.net/usage/options
                // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/scripts/datatable.js).
                // So when dropdowns used the scrollable div should be removed.
                //"dom": "<'row'<'col-md-8 col-sm-12'pli><'col-md-4 col-sm-12'<'table-group-actions pull-right'>>r>t<'row'<'col-md-8 col-sm-12'pli><'col-md-4 col-sm-12'>>",

                "lengthMenu": [
                    [20, 40, 60, 80, 100],
                    [20, 40, 60, 80, 100] // change per page values here
                ],
                "pageLength": 20, // default record count per page
                "ajax": {
                    "url": backendSetting.ajaxUrl + '/users/getUsers', // ajax source
                },
                "order": [
                    [1, "asc"]
                ], // set first column as a default sort by asc
                columnDefs: [
                    {orderable: false, targets: [0,-1]}
                ],
                "dom": "<'row'<'col-md-7 col-sm-12'pli><'col-md-5 col-sm-12'<'table-group-actions pull-right'>>r><'table-responsive't><'row'<'col-md-7 col-sm-12'pli><'col-md-5 col-sm-12'>>", // datatable layout
            }
        });

        // handle group actionsubmit button click
        grid.getTableWrapper().on('click', '.table-group-action-submit', function (e) {
            e.preventDefault();
            var action = $(".table-group-action-input", grid.getTableWrapper());
            if (action.val() != "" && grid.getSelectedRowsCount() > 0) {
                grid.setAjaxParam("customActionType", "group_action");
                grid.setAjaxParam("customActionName", action.val());
                grid.setAjaxParam("id", grid.getSelectedRows());
                grid.getDataTable().ajax.reload();
                grid.clearAjaxParams();
            } else if (action.val() == "") {
                alert({
                    type: 'danger',
                    icon: 'warning',
                    message: 'Please select an action',
                    container: grid.getTableWrapper(),
                    place: 'prepend'
                });
            } else if (grid.getSelectedRowsCount() === 0) {
                alert({
                    type: 'danger',
                    icon: 'warning',
                    message: 'No record selected',
                    container: grid.getTableWrapper(),
                    place: 'prepend'
                });
            }
        });

        grid.getTableWrapper().on('click', '.filter-submit', function( e ) {
            e.preventDefault();
            grid.setAjaxParam("user_id", $("#user_id",grid.getTableWrapper()).val());
            grid.setAjaxParam("full_name", $("#full_name",grid.getTableWrapper()).val());
            grid.setAjaxParam("user_group", $("#user_group",grid.getTableWrapper()).val());
            grid.setAjaxParam("email", $("#email",grid.getTableWrapper()).val());
            grid.setAjaxParam("phone", $("#phone",grid.getTableWrapper()).val());
        });

        $('#deleteUserGroup').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var groupId = button.data('group_id');
            var groupName = button.data('group_name');
            var modal = $(this);
            modal.find('.modal-body #userGroupId').val(groupId);
            modal.find('.modal-title').empty().text('ยืนยันการลบกลุ่มผู้ใช้: ' + groupName);
        });

        $("#btnDeleteUserGroup").on('click', function (e) {
            e.preventDefault();
            var elm = $(this).closest("#deleteUserGroup");
            var data = {
                _token: $('input[name=_token]', elm).val(),
                group_id: $('input[name=userGroupId]', elm).val()
            };

            $.ajax({
                    url: backendSetting.ajaxUrl + '/userGroup/delete',
                    type: "post",
                    data: data,
                    dataType: 'json'
                })
                .done(function (response) {
                    if (response) {
                        if (response.errors) {
                            alert(response.errors);
                        } else {
                            alert(response.success);
                            $("#datatable_user_groups").find(".row-user-group-"+$('input[name=userGroupId]', elm).val()).closest('tr').remove();
                            elm.modal('hide');
                        }
                    }
                })
                .fail(function (jqXHR, textStatus) {
                    alert('Cannot connect server!');
                });
        });
    }

    return {

        //main function to initiate the module
        init: function () {

            //initPickers();
            handleOrders();
        }

    };

}();

jQuery(document).ready(function() {
    Users.init();
});
